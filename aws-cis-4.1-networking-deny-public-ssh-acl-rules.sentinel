# aws-cis-4.1-networking-deny-public-ssh-acl-rules.sentinel
# from https://github.com/mikegreen/terraform-foundational-policies-library/tree/master/cis/aws/networking/aws-cis-4.1-networking-deny-public-ssh-acl-rules

import "tfplan/v2" as tfplan

print("CIS 4.1: Ensure no security groups allow ingress from 0.0.0.0/0 to port 22")

# Check ACL rules aws_network_acl_rule
public_ssh_acls = filter tfplan.resource_changes as _, resource_changes {
	resource_changes.mode is "managed" and
		resource_changes.type is "aws_network_acl_rule" and
		resource_changes.change.after.rule_action is "allow" and
		resource_changes.change.after.cidr_block is "0.0.0.0/0" and
		resource_changes.change.after.to_port is 22 and
		(resource_changes.change.actions contains "create" or
			resource_changes.change.actions is ["update"])
}

deny_public_ssh_acl_rules = rule {
	length(public_ssh_acls) == 0
}


# Check security group rules aws_security_group

disallowed_cidr_blocks = [
  "0.0.0.0/0",
]

all_security_groups = filter tfplan.resource_changes else {} as _, resource_changes {
	resource_changes.mode is "managed" and
 	resource_changes.type is "aws_security_group" and
	(resource_changes.change.actions contains "create" or
		resource_changes.change.actions contains "update")
}

print("ingress:",all_security_groups)

deny_public_ssh_sg_rules = rule {
	all all_security_groups.change.after.ingress else {} as _, ingress {
		print("ingress to_port:",ingress.to_port)
		print("ingress cidr_blocks:",ingress.cidr_blocks)
		ingress.to_port is 22 and
		ingress.cidr_blocks contains "0.0.0.0/0" 
	}
}

print("deny_public_ssh_sg_rules: ", deny_public_ssh_sg_rules)

main = rule {
	deny_public_ssh_acl_rules and
	deny_public_ssh_sg_rules
}
