# aws-cis-4.1-networking-deny-public-ssh-acl-rules.sentinel
# from https://github.com/mikegreen/terraform-foundational-policies-library/tree/master/cis/aws/networking/aws-cis-4.1-networking-deny-public-ssh-acl-rules

import "tfplan/v2" as tfplan

print("CIS 4.1: Ensure no security groups allow ingress from 0.0.0.0/0 to port 22")

# Check network ACLs
public_ssh_acls = filter tfplan.resource_changes as _, resource_changes {
	resource_changes.mode is "managed" and
		resource_changes.type is "aws_network_acl_rule" and
		resource_changes.change.after.rule_action is "allow" and
		resource_changes.change.after.cidr_block is "0.0.0.0/0" and
		resource_changes.change.after.to_port is 22 and
		(resource_changes.change.actions contains "create" or
			resource_changes.change.actions is ["update"])
}

print("public_ssh_acls length: ", length(public_ssh_acls))

deny_public_ssh_acl_rules = rule {
	length(public_ssh_acls) == 0
}

# Check security group rules
all_security_groups = filter tfplan.resource_changes as _, rc {
	rc.mode is "managed" and
 	rc.type is "aws_security_group" and
	rc.change.after.type is "ingress" and
	(rc.change.actions contains "create" or
		rc.change.actions contains "update")
}

print("all_security_groups length: ", length(all_security_groups))
print(all_security_groups)

#deny_public_ssh_sg_rules = rule {
#	any all_security_groups.change.after.ingress as i {
#		i.to_port is 22 
#	}
#}

#print("deny_public_ssh_sg_rules value: ", deny_public_ssh_sg_rules)

main = rule {
	deny_public_ssh_acl_rules 
	# and deny_public_ssh_sg_rules
}
